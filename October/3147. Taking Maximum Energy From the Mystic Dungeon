class Solution {
    public int maximumEnergy(int[] energy, int k) {
        int n = energy.length;
        int[] dp = new int[n];
        
        // Initialize dp with energy values
        for (int i = 0; i < n; i++) {
            dp[i] = energy[i];
        }
        
        // Backward iteration to include jumps of size k
        for (int i = n - 1; i >= 0; i--) {
            if (i + k < n) {
                dp[i] += dp[i + k];
            }
        }
        
        // Find the maximum energy collectable
        int maxEnergy = dp[0];
        for (int i = 1; i < n; i++) {
            if (dp[i] > maxEnergy) {
                maxEnergy = dp[i];
            }
        }
        
        return maxEnergy;
    }
}
